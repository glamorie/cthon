from typing import Protocol, Type, Any

class __Descriptor[T](Protocol):
    def __get__(self, instance: Any, owner: Type[Any]) -> T: ...
    def __set__(self, instance: Any, value: T) -> None: ...

class __CSimpleDataMeta[T](__Descriptor[T], type):
    pass

class __CSimpleData[T](__Descriptor[T]):
    def __init__(self, value: T) -> None:
        pass

    @property
    def value(self) -> T:
        pass

    @value.setter
    def value(self, value: T) -> None:
        pass

class __IntVariant(__CSimpleData[int], metaclass=__CSimpleDataMeta[int]): ...
class __FloatVariant(__CSimpleData[float], metaclass=__CSimpleDataMeta[float]): ...
class __StrVariant(__CSimpleData[str], metaclass=__CSimpleDataMeta[str]): ...
class __BoolVariant(__CSimpleData[bool], metaclass=__CSimpleDataMeta[bool]): ...

# Apply c simple datas
class c_bool(__IntVariant): ...
class c_byte(__IntVariant): ...
class c_char(__StrVariant): ...
class c_char_p(__StrVariant): ...
class c_double(__FloatVariant): ...
class c_float(__FloatVariant): ...
class c_int(__IntVariant): ...
class c_int16(__IntVariant): ...
class c_int32(__IntVariant): ...
class c_int64(__IntVariant): ...
class c_int8(__IntVariant): ...
class c_long(__IntVariant): ...
class c_longdouble(__FloatVariant): ...
class c_longlong(__FloatVariant): ...
class c_short(__IntVariant): ...
class c_size_t(__IntVariant): ...
class c_ssize_t(__IntVariant): ...
class c_time_t(__IntVariant): ...
class c_ubyte(__IntVariant): ...
class c_uint(__IntVariant): ...
class c_uint16(__IntVariant): ...
class c_uint32(__IntVariant): ...
class c_uint64(__IntVariant): ...
class c_uint8(__IntVariant): ...
class c_ulong(__IntVariant): ...
class c_ulonglong(__IntVariant): ...
class c_ushort(__IntVariant): ...
class c_wchar(__StrVariant): ...
class c_wchar_p(__StrVariant): ...
class c_void_p(__CSimpleData[None], metaclass=__CSimpleDataMeta[None]): ...

class __CComplexData(type):
    def __get__[T](cls: T, instance: Any, owner: Type[Any]) -> T: ...
    def __set__[T](cls: T, instance: Any, value: T) -> None: ...

class Struct(metaclass=__CComplexData):
    pass

class Union(metaclass=__CComplexData):
    pass
